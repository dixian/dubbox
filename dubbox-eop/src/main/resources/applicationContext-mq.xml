<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- a pooling based JMS provider -->
    <bean id="activeMQConnectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${eop.mq.addr}"/>
        <property name="trustAllPackages" value="true" />
    </bean>
    <bean id="jmsFactoryPool" class="org.springframework.jms.connection.CachingConnectionFactory">
        <constructor-arg ref="activeMQConnectionFactory"/>
    </bean>

    <!--<bean id="activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">-->
        <!--<property name="brokerURL" value="tcp://localhost:61616"/>-->
        <!--<property name="trustAllPackages" value="true" />-->
    <!--</bean>-->

    <!--<bean id="jmsFactoryPool" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">-->

        <!--<property name="connectionFactory" ref="activeMQConnectionFactory"></property>-->

    <!--</bean>-->


    <!-- Spring JMS Template -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">

        <property name="connectionFactory" ref="jmsFactoryPool" />
        <property name="defaultDestination" ref="destination" />

        <property name="explicitQosEnabled" value="true" />

        <!-- deliveryMode, priority, timeToLive 的开关，要生效，必须配置为true，默认false-->

        <property name="deliveryMode" value="1" />

        <!-- 发送模式  DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久-->

        <property name="pubSubDomain" value="true" />
        <property name="receiveTimeout" value="10000" />

    </bean>
    <!-- 发送消息的目的地（一个队列） -->
    <bean id="destination" class="org.apache.activemq.command.ActiveMQTopic">
        <!-- 设置消息队列的名字 -->
        <constructor-arg index="0" value="com.telecomjs.customer" />
    </bean>

    <!-- 异步线程池 -->
    <bean id="taskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 核心线程数 -->
        <property name="corePoolSize" value="${eop.service.taskpool.corePoolSize}" />
        <!-- 最大线程数 -->
        <property name="maxPoolSize" value="${eop.auth.taskpool.maxPoolSize}" />
        <!-- 队列最大长度 >=mainExecutor.maxSize -->
        <property name="queueCapacity" value="${eop.service.taskpool.queueCapacity}" />
        <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="${eop.auth.taskpool.keepAliveSeconds}" />
        <!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
        <property name="rejectedExecutionHandler">
            <!--<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />-->
            <bean class="java.util.concurrent.ThreadPoolExecutor$DiscardPolicy" />
        </property>

    </bean>

    <bean id="authTaskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 核心线程数 -->
        <property name="corePoolSize" value="${eop.auth.taskpool.corePoolSize}" />
        <!-- 最大线程数 -->
        <property name="maxPoolSize" value="${eop.auth.taskpool.maxPoolSize}" />
        <!-- 队列最大长度 >=mainExecutor.maxSize -->
        <property name="queueCapacity" value="${eop.auth.taskpool.queueCapacity}" />
        <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="${eop.auth.taskpool.keepAliveSeconds}" />
        <!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
        <property name="rejectedExecutionHandler">
            <!--<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />-->
            <bean class="java.util.concurrent.ThreadPoolExecutor$AbortPolicy" />
        </property>

    </bean>
    <!-- 消息监听器，主要监听的目的地址 Message Receiver Definition -->
    <bean id="messageReceiver" class="com.telecomjs.handlers.MessageHandler">
        <!--<property name="customService" ref="customService" />-->
        <!--<property name="productService" ref="productService" />-->
        <!--<property name="taskExecutor" ref="taskExecutor" />-->
    </bean>
    <bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="activeMQConnectionFactory" />
        <!--<property name="destinationName" value="com.telecomjs.customer" />-->
        <property name="destination" ref="destination" />
        <property name="messageListener" ref="messageReceiver" />
    </bean>
    <!--<bean class="org.springframework.jms.listener.SimpleMessageListenerContainer" >-->
        <!--<property name="connectionFactory" ref="activeMQConnectionFactory" />-->
        <!--<property name="destination" ref="destination" />-->
        <!--<property name="messageListener" ref="messageReceiver" />-->
    <!--</bean>-->
</beans>